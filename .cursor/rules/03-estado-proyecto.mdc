---
description: Estado actual del proyecto y pr√≥ximos pasos
---

# Estado Actual del Proyecto CDH

## Proyecto 1: `cdh` (Aplicaci√≥n Principal)

### ‚úÖ Estado: MVP FUNCIONALMENTE COMPLETADO

**Puntos de Control Finalizados**: PC 1 al PC 6

**Rama Activa**: `develop`

**Repositorio**: `https://github.com/devMasterCommander/cdh.git`

### Funcionalidades Implementadas
- ‚úÖ Autenticaci√≥n con NextAuth.js
- ‚úÖ Sistema de cursos, m√≥dulos y lecciones
- ‚úÖ Reproductor de video Vimeo integrado
- ‚úÖ Seguimiento de progreso de lecciones (timestamp + completado)
- ‚úÖ Sistema de pagos con Stripe
- ‚úÖ Sistema de comisiones multinivel para afiliados
- ‚úÖ Webhooks de Stripe para confirmaci√≥n de pagos
- ‚úÖ Relaci√≥n de patrocinio entre usuarios (sponsorId)

### Archivos Clave
- [src/app/api/auth/[...nextauth]/route.ts](mdc:src/app/api/auth/[...nextauth]/route.ts) - Configuraci√≥n NextAuth
- [src/app/api/progress/toggle-complete/route.ts](mdc:src/app/api/progress/toggle-complete/route.ts) - API de progreso
- [src/app/cursos/[courseId]/leccion/[lessonId]/page.tsx](mdc:src/app/cursos/[courseId]/leccion/[lessonId]/page.tsx) - P√°gina de lecci√≥n
- [src/components/VideoPlayer.tsx](mdc:src/components/VideoPlayer.tsx) - Reproductor Vimeo
- [src/lib/server/commissions.ts](mdc:src/lib/server/commissions.ts) - L√≥gica de comisiones
- [prisma/schema.prisma](mdc:prisma/schema.prisma) - Esquema de base de datos

## Proyecto 2: `cdh-admin` (Panel de Administraci√≥n)

### üîÑ Estado: REPOSITORIO PREPARADO - EN DESARROLLO

**Rama Activa**: `develop`

**Repositorio**: `https://github.com/devMasterCommander/cdh-admin.git`

**Metodolog√≠a**: Git Flow activado

## üéØ PR√ìXIMO HITO: Punto de Control 7

### PC 7: Despliegue Local de Directus

**Objetivo**: Instalar una instancia de Directus en la carpeta del proyecto `cdh-admin` usando Docker, conectada a la base de datos de Supabase.

#### PC 7.1: Configuraci√≥n de Docker
**Tareas**:
1. Crear archivo `docker-compose.yml` en la ra√≠z de `cdh-admin`
   - Configurar servicio de Directus
   - Configurar PostgreSQL para cach√© (no la BD principal)
2. Crear archivo `.env` en la ra√≠z de `cdh-admin`
   - Variables de entorno de Directus
   - Clave secreta de Directus
   - Credenciales de administrador
   - **URL de conexi√≥n a Supabase** (la misma que en `cdh`)

**Validaci√≥n**: Cliente crea los archivos con el contenido proporcionado.

#### PC 7.2: Iniciar Directus y Primera Configuraci√≥n
**Tareas**:
1. Ejecutar `docker-compose up -d` en `cdh-admin`
2. Acceder a `http://localhost:8055`
3. Login con credenciales de administrador del `.env`
4. Verificar que Directus muestra autom√°ticamente las tablas de Supabase

**Validaci√≥n**: 
- Directus accesible en localhost:8055
- Login exitoso
- Tablas de Supabase visibles en la interfaz

## Workflow de Desarrollo

### Git Flow
- **Rama Principal**: `main` (producci√≥n)
- **Rama de Desarrollo**: `develop` (trabajo activo)
- **Ramas de Features**: `feature/nombre-feature`
- **Ramas de Hotfix**: `hotfix/nombre-fix`

### Proceso de Trabajo
1. Todo desarrollo se hace en `develop`
2. Features individuales en `feature/*`
3. Merge a `develop` cuando est√© completo
4. Release a `main` solo cuando est√© listo para producci√≥n
